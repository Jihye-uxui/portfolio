{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/portfolio/portfolio-frontend/src/components/WorkItem.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class WorkItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imgUrl: '',\n      author: '',\n      categoriesInfo: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      featured_media,\n      author\n    } = this.props.work;\n    const getImageUrl = axios.get(`/wp-json/wp/v2/media/${featured_media}`);\n    const getAuthor = axios.get(`/wp-json/wp/v2/users/${author}`);\n    const getCategoryInfo = axios.get('/wp-json/wp/v2/custom_work_category');\n    Promise.all([getImageUrl, getAuthor, getCategoryInfo]).then(res => {\n      // console.log(res);\n      this.setState({\n        imgUrl: res[0].data.media_details.sizes.full.source_url,\n        author: res[1].data.name,\n        categoriesInfo: res[2].data,\n        isLoaded: true\n      });\n    });\n  }\n\n  getCategoryNames(categoriesInfoArray, projectWorkCategory) {\n    const categoryNames = projectWorkCategory.map(termId => {\n      const foundCategory = categoriesInfoArray.find(category => category.id === termId);\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"work-term\",\n        children: foundCategory.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work-terms\",\n      children: categoryNames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      id,\n      slug,\n      title,\n      excerpt,\n      custom_work_category\n    } = this.props.work;\n    const {\n      author,\n      imgUrl,\n      isLoaded,\n      categoriesInfo\n    } = this.state;\n    console.log(categoriesInfo[0]);\n\n    if (isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"work-list\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/work/${slug}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgUrl,\n            alt: title.rendered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title.rendered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"work-summary\",\n          dangerouslySetInnerHTML: {\n            __html: excerpt.rendered\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), this.getCategoryNames(categoriesInfo, custom_work_category), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/work/${slug}`,\n            children: \"See Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    }\n\n    return null;\n  }\n\n}\nWorkItem.propTypes = {\n  work: PropTypes.object.isRequired\n};\nexport default WorkItem;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/portfolio/portfolio-frontend/src/components/WorkItem.js"],"names":["React","Component","Link","PropTypes","axios","WorkItem","state","imgUrl","author","categoriesInfo","isLoaded","componentDidMount","featured_media","props","work","getImageUrl","get","getAuthor","getCategoryInfo","Promise","all","then","res","setState","data","media_details","sizes","full","source_url","name","getCategoryNames","categoriesInfoArray","projectWorkCategory","categoryNames","map","termId","foundCategory","find","category","id","render","slug","title","excerpt","custom_work_category","console","log","rendered","__html","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nexport class WorkItem extends Component {\n    state = {\n        imgUrl  : '',\n        author  : '',\n        categoriesInfo : [],\n        isLoaded: false\n    }\n\n    static propTypes = {\n        work: PropTypes.object.isRequired\n    }\n\n    componentDidMount() {\n        const { featured_media, author } = this.props.work;\n        const getImageUrl = axios.get(`/wp-json/wp/v2/media/${featured_media}`);\n        const getAuthor = axios.get(`/wp-json/wp/v2/users/${author}`);\n        const getCategoryInfo = axios.get('/wp-json/wp/v2/custom_work_category') \n\n        Promise.all([getImageUrl, getAuthor, getCategoryInfo]).then(res => {\n            // console.log(res);\n            this.setState({\n                imgUrl  : res[0].data.media_details.sizes.full.source_url,\n                author  : res[1].data.name,\n                categoriesInfo: res[2].data,\n                isLoaded: true\n            });\n        });\n    }\n\n    getCategoryNames(categoriesInfoArray, projectWorkCategory){\n        const categoryNames = projectWorkCategory.map((termId) => {\n             \n            const foundCategory = categoriesInfoArray.find(category => category.id === termId);\n            \n            return <span className=\"work-term\">{foundCategory.name}</span>\n        });\n        return (\n            <div className=\"work-terms\">{categoryNames}</div>\n        )\n    }\n\n    render() {\n        const { id, slug, title, excerpt, custom_work_category } = this.props.work;\n        const { author, imgUrl, isLoaded, categoriesInfo } = this.state;\n        console.log(categoriesInfo[0]);\n\n\n        if ( isLoaded ) {\n            return (\n                <div className=\"work-list\">\n                    {/* Project Thumbnail + Title */}\n                    <Link to={`/work/${slug}`}>\n                        <img src={imgUrl} alt={title.rendered} />\n                        <h2>{ title.rendered }</h2>\n                    </Link>\n\n                    {/* Project Summary */}\n                    <div className=\"work-summary\" dangerouslySetInnerHTML={{ __html: excerpt.rendered }}></div>\n                    \n                    {/* Project Information */}\n                    {this.getCategoryNames(categoriesInfo, custom_work_category)}\n                    <div className=\"button\"><Link to={`/work/${slug}`}>See Details</Link></div>\n                </div>\n            );\n        }\n        return null;\n    }\n}\n\nexport default WorkItem\n"]},"metadata":{},"sourceType":"module"}