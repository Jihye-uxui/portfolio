{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/portfolio/portfolio-frontend/src/components/WorkTerms.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom'; // import { appTitle } from '../globals/globals';\n\nimport useGlobal from '../store/globalAppState';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkTerms() {\n  _s();\n\n  const globalStateAndglobalActions = useGlobal();\n  const globalState = globalStateAndglobalActions[0];\n  let {\n    id\n  } = useParams();\n  const [taxonomyTerms, setTaxonomyTerms] = useState([]);\n  useEffect(() => {\n    const fetchTaxonomyInfo = async () => {\n      const res = await fetch(`/wp-json/wp/v2/custom_work_category/${id}`); // POST MAN path: http://localhost:8888/portfolio/wp-json/wp/v2/custom_work_category/15\n\n      const customTaxonomies = await res.json();\n      setTaxonomyTerms(customTaxonomies.name);\n    };\n\n    fetchTaxonomyInfo();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: taxonomyTerms.map((term, i) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"work-terms\",\n        children: [term.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 69\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkTerms, \"LpRJ/5EtvN8BG0ZWw2ep49L/MMk=\", false, function () {\n  return [useGlobal, useParams];\n});\n\n_c = WorkTerms;\nexport default WorkTerms;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkTerms\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/portfolio/portfolio-frontend/src/components/WorkTerms.js"],"names":["React","useEffect","useState","Link","useParams","useGlobal","axios","WorkTerms","globalStateAndglobalActions","globalState","id","taxonomyTerms","setTaxonomyTerms","fetchTaxonomyInfo","res","fetch","customTaxonomies","json","name","map","term","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,SAAT,GAAsB;AAAA;;AAClB,QAAMC,2BAA2B,GAAGH,SAAS,EAA7C;AACA,QAAMI,WAAW,GAAGD,2BAA2B,CAAC,CAAD,CAA/C;AAEA,MAAI;AAAEE,IAAAA;AAAF,MAASN,SAAS,EAAtB;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,iBAAiB,GAAG,YAAW;AACjC,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,uCAAsCL,EAAG,EAA3C,CAAvB,CADiC,CAE7C;;AAEY,YAAMM,gBAAgB,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAA/B;AACAL,MAAAA,gBAAgB,CAACI,gBAAgB,CAACE,IAAlB,CAAhB;AACH,KAND;;AAOAL,IAAAA,iBAAiB;AAEpB,GAVQ,EAUN,CAACH,EAAD,CAVM,CAAT;AAaA,sBACI;AAAA,cACKC,aAAa,CAACQ,GAAd,CAAkB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5B,0BACI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,mBAAsCD,IAAI,CAACF,IAA3C,eAAgD;AAAA;AAAA;AAAA;AAAA,gBAAhD;AAAA,SAAkCG,CAAlC;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA7BQd,S;UAC+BF,S,EAGvBD,S;;;KAJRG,S;AA+BT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n// import { appTitle } from '../globals/globals';\nimport useGlobal from '../store/globalAppState';\nimport axios from 'axios';\n\n\nfunction WorkTerms () {\n    const globalStateAndglobalActions = useGlobal();\n    const globalState = globalStateAndglobalActions[0];\n\n    let { id } = useParams();\n    const [taxonomyTerms, setTaxonomyTerms] = useState([]);\n\n    useEffect(() => {\n        const fetchTaxonomyInfo = async() => {\n            const res = await fetch(`/wp-json/wp/v2/custom_work_category/${id}`);\n// POST MAN path: http://localhost:8888/portfolio/wp-json/wp/v2/custom_work_category/15\n\n            const customTaxonomies = await res.json();\n            setTaxonomyTerms(customTaxonomies.name);\n        }\n        fetchTaxonomyInfo();\n\n    }, [id]);\n\n\n    return (\n        <div>\n            {taxonomyTerms.map((term, i) => {\n                return (\n                    <span className=\"work-terms\" key={i}>{term.name}<br/></span>\n                )\n            })}\n        </div>\n    );\n}\n\nexport default WorkTerms;\n"]},"metadata":{},"sourceType":"module"}