{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/portfolio/portfolio-frontend/src/components/WorkItem.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class WorkItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imgUrl: '',\n      categoriesInfo: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      featured_media\n    } = this.props.work;\n    const getImageUrl = axios.get(`/wp-json/wp/v2/media/${featured_media}`);\n    const getCategoryInfo = axios.get('/wp-json/wp/v2/custom_work_category');\n    Promise.all([getImageUrl, getCategoryInfo]).then(res => {\n      // console.log(res);\n      this.setState({\n        imgUrl: res[0].data.media_details.sizes.full.source_url,\n        author: res[1].data.name,\n        categoriesInfo: res[2].data,\n        isLoaded: true\n      });\n    });\n  }\n\n  getCategoryNames(categoriesInfoArray, projectWorkCategory) {\n    const categoryNames = projectWorkCategory.map(termId => {\n      const foundCategory = categoriesInfoArray.find(category => category.id === termId);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: foundCategory.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categoryNames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      slug,\n      title,\n      excerpt,\n      custom_work_category\n    } = this.props.work;\n    const {\n      imgUrl,\n      isLoaded,\n      categoriesInfo\n    } = this.state;\n    console.log(categoriesInfo[0]);\n\n    if (isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/work/${slug}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgUrl,\n            alt: title.rendered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title.rendered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: excerpt.rendered\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/work/${slug}`,\n          children: \"See Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.getCategoryNames(categoriesInfo, custom_work_category)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    }\n\n    return null;\n  }\n\n}\nWorkItem.propTypes = {\n  work: PropTypes.object.isRequired\n};\nexport default WorkItem;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/portfolio/portfolio-frontend/src/components/WorkItem.js"],"names":["React","Component","Link","PropTypes","axios","WorkItem","state","imgUrl","categoriesInfo","isLoaded","componentDidMount","featured_media","props","work","getImageUrl","get","getCategoryInfo","Promise","all","then","res","setState","data","media_details","sizes","full","source_url","author","name","getCategoryNames","categoriesInfoArray","projectWorkCategory","categoryNames","map","termId","foundCategory","find","category","id","render","slug","title","excerpt","custom_work_category","console","log","rendered","__html","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nexport class WorkItem extends Component {\n    state = {\n        imgUrl  : '',\n        categoriesInfo : [],\n        isLoaded: false\n    }\n\n    static propTypes = {\n        work: PropTypes.object.isRequired\n    }\n\n    componentDidMount() {\n        const { featured_media } = this.props.work;\n        const getImageUrl = axios.get(`/wp-json/wp/v2/media/${featured_media}`);\n        const getCategoryInfo = axios.get('/wp-json/wp/v2/custom_work_category') \n\n        Promise.all([getImageUrl, getCategoryInfo]).then(res => {\n            // console.log(res);\n            this.setState({\n                imgUrl  : res[0].data.media_details.sizes.full.source_url,\n                author  : res[1].data.name,\n                categoriesInfo: res[2].data,\n                isLoaded: true\n            });\n        });\n    }\n\n    getCategoryNames(categoriesInfoArray, projectWorkCategory){\n        const categoryNames = projectWorkCategory.map((termId) => {\n             \n            const foundCategory = categoriesInfoArray.find(category => category.id === termId);\n            \n            return <li>{foundCategory.name}</li>\n        });\n        return (\n            <ul>{categoryNames}</ul>\n        )\n    }\n\n    render() {\n        const { slug, title, excerpt, custom_work_category } = this.props.work;\n        const { imgUrl, isLoaded, categoriesInfo } = this.state;\n        console.log(categoriesInfo[0]);\n\n\n        if ( isLoaded ) {\n            return (\n                <div>\n                    {/* // Page Work List */}\n\n                    <Link to={`/work/${slug}`}><img src={imgUrl} alt={title.rendered} /></Link>\n                    <h2>{ title.rendered }</h2>\n                    <div dangerouslySetInnerHTML={{ __html: excerpt.rendered }}></div>\n                    <Link to={`/work/${slug}`}>See Details</Link>\n                    <div>{this.getCategoryNames(categoriesInfo, custom_work_category)}</div>\n                </div>\n            );\n        }\n        return null;\n    }\n}\n\nexport default WorkItem\n"]},"metadata":{},"sourceType":"module"}